name: "Deploy ECS"
on:
  push:
env:
  ECR_REPOSITORY: 931567824924.dkr.ecr.ap-northeast-1.amazonaws.com/goguma-api
jobs:
  deploy:
    defaults:
      run:
        shell: bash
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Check image already exists
        id: image-exists
        uses: mnmandahalf/check-ecr-image-exists@v0.1.4
        with:
          region: ap-northeast-1
          repository-name: goguma-api
          image-tag: ${{ github.sha }}
          access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Get the output
        run: echo "image-exists=${{ steps.image-exists.outputs.image-exists }}"

      - name: Set up Docker Buildx
        if: ${{ steps.image-exists.outputs.image-exists }} == "0"
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        if: ${{ steps.image-exists.outputs.image-exists }} == "0"
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push
        if: ${{ steps.image-exists.outputs.image-exists }} == "0"
        id: build-image
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ env.ECR_REPOSITORY }}:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move cache
        if: ${{ steps.image-exists.outputs.image-exists }} == "0"
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: aws/task-definition.json
          container-name: goguma-api
          image: ${{ env.ECR_REPOSITORY }}:${{ github.sha }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: goguma-api
          cluster: goguma
          wait-for-service-stability: true
